{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input, Button } from 'react-native-elements';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar auth = getAuth();\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    validationMessage = _useState6[0],\n    setvalidationMessage = _useState6[1];\n  function login() {\n    return _login.apply(this, arguments);\n  }\n  function _login() {\n    _login = _asyncToGenerator(function* () {\n      if (email === '' || password === '') {\n        setvalidationMessage('required filled missing');\n        return;\n      }\n      try {\n        yield signInWithEmailAndPassword(auth, email, password);\n      } catch (error) {\n        setvalidationMessage(error.message);\n      }\n    });\n    return _login.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(Image, {\n        style: {\n          width: 150,\n          height: 150,\n          alignSelf: 'center'\n        }\n      }), _jsx(Input, {\n        placeholder: \"Email\",\n        containerStyle: {\n          marginTop: 10\n        },\n        value: email,\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        leftIcon: _jsx(Icon, {\n          name: \"envelope\",\n          size: 16\n        })\n      }), _jsx(Input, {\n        placeholder: \"Password\",\n        containerStyle: {\n          marginTop: 10\n        },\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        secureTextEntry: true,\n        leftIcon: _jsx(Icon, {\n          name: \"key\",\n          size: 16\n        })\n      }), _jsx(Text, {\n        style: styles.error,\n        children: validationMessage\n      }), _jsx(Button, {\n        title: \"Sign in\",\n        buttonStyle: {\n          marginTop: 10\n        },\n        onPress: login\n      }), _jsxs(Text, {\n        style: {\n          marginTop: 5,\n          fontSize: 17\n        },\n        children: [\" Don't have an account yet ?\", _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Sign Up');\n          },\n          style: {\n            color: 'blue',\n            marginLeft: 10\n          },\n          children: _jsx(Text, {\n            children: \"Sign up here\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    bottom: 50\n  },\n  error: {\n    marginTop: 10,\n    color: 'red'\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","Image","TouchableOpacity","Icon","Input","Button","getAuth","signInWithEmailAndPassword","jsx","_jsx","jsxs","_jsxs","auth","SignInScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","validationMessage","setvalidationMessage","login","_login","apply","arguments","_asyncToGenerator","error","message","style","styles","container","children","width","height","alignSelf","placeholder","containerStyle","marginTop","value","onChangeText","text","leftIcon","name","size","secureTextEntry","title","buttonStyle","onPress","fontSize","navigate","color","marginLeft","create","flex","backgroundColor","alignItems","justifyContent","bottom"],"sources":["/home/hackathon/Desktop/SaveMe/screens/Authentication/SignInScreen.jsx"],"sourcesContent":["import React,{useState} from 'react';\nimport { StyleSheet, Text, View,Image,TouchableOpacity } from 'react-native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Input, Button } from 'react-native-elements';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\n\nconst auth = getAuth();\n\nconst SignInScreen = ({ navigation}) => {\n  const [email,setEmail] = useState('');\n  const [password,setPassword] = useState('');\n  const [validationMessage,setvalidationMessage] = useState('');\n  \n  async function login() {\n    if (email === '' || password === '') {\n      setvalidationMessage('required filled missing')\n      return;\n    }\n\n    try {\n      await signInWithEmailAndPassword(auth,email, password);\n    } catch (error) {\n     setvalidationMessage(error.message);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Image style={{width:150,height:150,alignSelf:'center'}}/>\n        <Input\n          placeholder='Email'\n          containerStyle={{marginTop: 10}}\n          value={email}\n          onChangeText={(text) => setEmail(text)}\n          leftIcon={<Icon name='envelope' size={16}/>}\n            />\n\n        <Input\n          placeholder='Password'\n          containerStyle={{marginTop: 10}}\n          value={password}\n          onChangeText={(text) => setPassword(text)}\n          secureTextEntry={true}\n          leftIcon={<Icon name='key' size={16}/>}\n            />\n       {<Text style={styles.error}>{validationMessage}</Text>}\n\n        <Button title=\"Sign in\" buttonStyle={{marginTop:10}} onPress={login} />\n        <Text style={{marginTop:5,fontSize:17}}> Don't have an account yet ? \n        <TouchableOpacity onPress={()=>navigation.navigate('Sign Up')} style={{color:'blue',marginLeft:10}}>\n                <Text>Sign up here</Text> \n          </TouchableOpacity>\n          </Text>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    bottom:50\n  },\n  error: {\n    marginTop: 10,\n    color: 'red',\n  }\n});\n\nexport default SignInScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}